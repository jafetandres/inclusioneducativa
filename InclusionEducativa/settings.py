"""
Django settings for InclusionEducativa project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
from InclusionEducativa.settings import *
import os
import dj_database_url
from django.urls import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0r9u3z=w6j2mq$vbus@(ppx5%f+c63pgmsnum10=!_jvl7i@2h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
ADMINS = [('Jafet', 'jafetandres@hotmail.com')]
# DEBUG = False
#
# ALLOWED_HOSTS = ['127.0.0.1', '.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'InclusionEducativa.Apps.GestionSistema',
    'InclusionEducativa.Apps.AppDocente',
    'InclusionEducativa.Apps.AppRepresentante',
    'InclusionEducativa.Apps.AppExperto',
    'InclusionEducativa.Apps.automata',
    'django_chatter',
    'channels',
    'notifications',
    'InclusionEducativa.Apps.chat',
    'django_extensions'

    # 'django_telegrambot'

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'InclusionEducativa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'InclusionEducativa/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],

        },
    },
]

# DJANGO_TELEGRAMBOT = {
#
#     'MODE': 'WEBHOOK',  # (Optional [str]) # The default value is WEBHOOK,
#     # otherwise you may use 'POLLING'
#     # NB: if use polling you must provide to run
#     # a management command that starts a worker
#
#     'WEBHOOK_SITE': 'https://mywebsite.com',
#     'WEBHOOK_PREFIX': '/prefix',  # (Optional[str]) # If this value is specified,
#     # a prefix is added to webhook url
#
#     # 'WEBHOOK_CERTIFICATE' : 'cert.pem', # If your site use self-signed
#     # certificate, must be set with location of your public key
#     # certificate.(More info at https://core.telegram.org/bots/self-signed )
#
#     'BOTS': [
#         {
#             'TOKEN': '123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11',  # Your bot token.
#
#             # 'ALLOWED_UPDATES':(Optional[list[str]]), # List the types of
#             # updates you want your bot to receive. For example, specify
#             # ``["message", "edited_channel_post", "callback_query"]`` to
#             # only receive updates of these types. See ``telegram.Update``
#             # for a complete list of available update types.
#             # Specify an empty list to receive all updates regardless of type
#             # (default). If not specified, the previous setting will be used.
#             # Please note that this parameter doesn't affect updates created
#             # before the call to the setWebhook, so unwanted updates may be
#             # received for a short period of time.
#
#             # 'TIMEOUT':(Optional[int|float]), # If this value is specified,
#             # use it as the read timeout from the server
#
#             # 'WEBHOOK_MAX_CONNECTIONS':(Optional[int]), # Maximum allowed number of
#             # simultaneous HTTPS connections to the webhook for update
#             # delivery, 1-100. Defaults to 40. Use lower values to limit the
#             # load on your bot's server, and higher values to increase your
#             # bot's throughput.
#
#             # 'POLL_INTERVAL' : (Optional[float]), # Time to wait between polling updates from Telegram in
#             # seconds. Default is 0.0
#
#             # 'POLL_CLEAN':(Optional[bool]), # Whether to clean any pending updates on Telegram servers before
#             # actually starting to poll. Default is False.
#
#             # 'POLL_BOOTSTRAP_RETRIES':(Optional[int]), # Whether the bootstrapping phase of the `Updater`
#             # will retry on failures on the Telegram server.
#             # |   < 0 - retry indefinitely
#             # |     0 - no retries (default)
#             # |   > 0 - retry up to X times
#
#             # 'POLL_READ_LATENCY':(Optional[float|int]), # Grace time in seconds for receiving the reply from
#             # server. Will be added to the `timeout` value and used as the read timeout from
#             # server (Default: 2).
#         },
#         # Other bots here with same structure.
#     ],
#
# }

# CHATTER_BASE_TEMPLATE ='Chat/base.html'

WSGI_APPLICATION = 'InclusionEducativa.wsgi.application'
ASGI_APPLICATION = 'InclusionEducativa.routing.application'

GRAPH_MODELS = {
    'all_applications': True,
    'group_models': True,
}
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            'hosts': [('127.0.0.1', 6379)],
        },

    },
}

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': 'InclusionEducativa.db',
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'inclusioneducativa',
#         'USER': 'postgres',
#         'PASSWORD': '1234',
#         'HOST': 'localhost',
#         'PORT': '',
#     }
# }
# db_from_env = dj_database_url.config(conn_max_age=500)
# DATABASES['default'].update(db_from_env)


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
LANGUAGE_CODE = "es-es"

TIME_ZONE = 'America/Guayaquil'

USE_I18N = True

USE_L10N = False

DATE_FORMAT = "Y-m-d"

USE_TZ = True

# STATIC_ROOT = "InclusionEducativa/static"
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "static"),
#     '/var/www/static/',
# ]

STATIC_URL = '/static/'

STATICFILES_DIRS = [(os.path.join(BASE_DIR, 'InclusionEducativa/static/')), ]

AUTH_USER_MODEL = 'GestionSistema.Usuario'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'jafetgalvez1@gmail.com'
EMAIL_HOST_PASSWORD = 'kgelhlrlozgcpoum'
EMAIL_PORT = 587
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'InclusionEducativa/media')
DATA_UPLOAD_MAX_MEMORY_SIZE = 10242880
